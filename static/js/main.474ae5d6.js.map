{"version":3,"file":"static/js/main.474ae5d6.js","mappings":"yBAGkBA,SAASC,eAAe,UAC9BC,QAAU,SAACC,GACrB,IAAIC,EAAOJ,SAASC,eAAe,QACnCG,EAAKC,UAAY,GAEjB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAEI,OAAOC,MAAOF,IAAK,CACvC,IAAIG,EAAQT,SAASU,cAAc,SACnCD,EAAME,KAAO,OACbF,EAAMG,UAAY,eAClBH,EAAMI,GAAK,gBAAkBP,EAC7BG,EAAMK,UAAY,EAClBL,EAAMM,UAAY,SAACZ,GAAD,MAAkB,cAAVA,EAAEa,KAAiC,WAAVb,EAAEa,KAAqB,kEAAuBC,KAAKd,EAAEa,MACxGZ,EAAKc,YAAYT,KAKrB,IAAIU,EAAY,IAAIC,QAEpBD,EAAUE,OAAO,gBAAiBC,0CAClCH,EAAUE,OAAO,eAAgB,oBAEpBrB,SAASC,eAAe,UAC9BsB,QAAU,WAWf,IATA,IAAIC,EAASxB,SAASC,eAAe,UAAUO,MAC3CiB,EAAUzB,SAASC,eAAe,WAAWO,MAAMkB,cACnDC,EAAU3B,SAASC,eAAe,WAAWO,MAAMkB,cACjDE,EAAeC,MAAMC,KAAK,IAAIC,IAAIN,EAAQO,QAAQ,cAAe,IAAIC,MAAM,MAC3EC,EAAeL,MAAMC,KAAK,IAAIC,IAAKJ,EAASK,QAAQ,cAAe,IAAIC,MAAM,MAE7EE,EAAYnC,SAASoC,uBAAuB,gBAE9CC,EAAa,GACR/B,EAAI,EAAGA,EAAI6B,EAAUX,OAAQlB,IACpC+B,GAAoC,IAAtBF,EAAU7B,GAAGE,MAAc,IAAM2B,EAAU7B,GAAGE,MAG9D8B,QAAQC,IAAIF,GACZ,IAAIG,EAAMC,KAAKC,UAAU,CACvB,QAAWd,EACX,QAAWM,EACX,OAAUV,EACV,KAAQa,EACR,SAAY,OAQdM,MAAM,mEANe,CACnBC,OAAQ,OACRC,QAAS1B,EACT2B,KAAMN,EACNO,SAAU,WAGTC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,IAAMC,EAASX,KAAKY,MAAMF,GAAMC,OAC1BE,EAAatD,SAASC,eAAe,cAC3CqD,EAAWjD,UAAY,GAEvB+C,EAAOG,SAAQ,SAAC/C,GACd,IAAMgD,EAAaxD,SAASU,cAAc,SAC1C8C,EAAWnD,UAAYG,EACvB8C,EAAWpC,YAAYsC,GACvBF,EAAWjC,OAAO,YAGrBoC,OAAM,SAAAC,GAAK,OAAIpB,QAAQC,IAAI,QAASmB,O","sources":["index.js"],"sourcesContent":["import './index.css';\n\n\nlet lengthInput = document.getElementById('length');\nlengthInput.onkeyup = (e) => {\n  let word = document.getElementById('word');\n  word.innerHTML = \"\";\n\n  for (let i = 0; i < e.target.value; i++) {\n    let input = document.createElement('input');\n    input.type = 'text';\n    input.className = \"word-textbox\";\n    input.id = \"word-textbox-\" + i;\n    input.maxLength = 1;\n    input.onkeydown = (e) => (e.key === \"Backspace\" || e.key === \"Delete\") || /[a-z ğüşiöçĞÜŞİÖÇ]/gi.test(e.key);\n    word.appendChild(input);\n  }\n}\n\n\nvar myHeaders = new Headers();\n// console.log({process.env.REACT_APP_AUTHORIZATION})\nmyHeaders.append(\"Authorization\", process.env.REACT_APP_API_KEY);\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nlet submit = document.getElementById('submit');\nsubmit.onclick = function () {\n\n  let length = document.getElementById('length').value;\n  let exclude = document.getElementById('exclude').value.toUpperCase();\n  let include = document.getElementById('include').value.toUpperCase();\n  const excludeArray = Array.from(new Set(exclude.replace(/[^A-Za-z ]/g, '').split('')));\n  const includeArray = Array.from(new Set((include).replace(/[^A-Za-z ]/g, '').split('')));\n\n  const wordArray = document.getElementsByClassName('word-textbox')\n\n  let wordResult = \"\"\n  for (var i = 0; i < wordArray.length; i++) {\n    wordResult += wordArray[i].value == \"\" ? ' ' : wordArray[i].value;\n  }\n\n  console.log(wordResult)\n  var raw = JSON.stringify({\n    \"exclude\": excludeArray,\n    \"include\": includeArray,\n    \"length\": length,\n    \"word\": wordResult,\n    \"language\": \"tr\"\n  });\n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  fetch(\"http://word-finder-get-words.herokuapp.com/word_finder/get_words\", requestOptions)\n    .then(response => response.text())\n    .then(data => {\n      const result = JSON.parse(data).result;\n      const resultList = document.getElementById('resultList');\n      resultList.innerHTML = '';\n\n      result.forEach((value) => {\n        const resultItem = document.createElement('label');\n        resultItem.innerHTML = value;\n        resultList.appendChild(resultItem);\n        resultList.append(', ')\n      })\n    })\n    .catch(error => console.log('error', error));\n}"],"names":["document","getElementById","onkeyup","e","word","innerHTML","i","target","value","input","createElement","type","className","id","maxLength","onkeydown","key","test","appendChild","myHeaders","Headers","append","process","onclick","length","exclude","toUpperCase","include","excludeArray","Array","from","Set","replace","split","includeArray","wordArray","getElementsByClassName","wordResult","console","log","raw","JSON","stringify","fetch","method","headers","body","redirect","then","response","text","data","result","parse","resultList","forEach","resultItem","catch","error"],"sourceRoot":""}